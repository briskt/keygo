version: "3.7"

services:
  app:
    image: keygo
    build: .
    volumes:
      - .:/src
    ports:
      - "1323:1323"
      - "2345:2345"
    env_file:
      - .env
    environment:
      ADDR: 0.0.0.0
      APP_NAME: keygo
      DATABASE_URL: postgres://keygo:keygo@db:5432/keygo?sslmode=disable
      GO_ENV: development
      SUPPORT_EMAIL: forget_about_it@example.com
    depends_on:
      db:
        condition: service_healthy
    working_dir: /src

  ui-app:
    image: node:18
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - "35729:35729"
    command: npm run docker-dev
    user: 1000:1000

  test:
    build: .
    image: keygo
    volumes:
      - .:/src
    env_file:
      - test.env
    environment:
      DATABASE_URL: postgres://keygo:keygo@testdb:5432/keygo?sslmode=disable
      GO_ENV: test
      HISTCONTROL: ignoreboth
    depends_on:
      testdb:
        condition: service_healthy
    working_dir: /src
    command: go test -p 1 ./...

  db_base:
    image: postgres:11.6
    volumes:
      - ./db-init.sh:/docker-entrypoint-initdb.d/db-init.sh
    environment:
      POSTGRES_USER: keygo
      POSTGRES_PASSWORD: keygo
      POSTGRES_DB: keygo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "keygo"]
      start_period: 1s
      interval: 500ms
      timeout: 100ms
      retries: 3

  db:
    extends:
      service: db_base
    ports:
    - "5433:5432"

  testdb:
    extends:
      service: db_base
    ports:
    - "5432:5432"

  # http://localhost:8000/?pgsql=db&username=keygo&db=keygo&ns=public
  adminer:
    image: adminer
    depends_on:
      - db
    ports:
      - 8000:8080
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: db
      ADMINER_DEFAULT_DB_NAME: keygo

  swagger:
    image: quay.io/goswagger/swagger:latest
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    working_dir: /app
#
#  redoc:
#    build:
#      context: .
#      dockerfile: Dockerfile-redoc-cli
#    volumes:
#      - ./swagger:/data
#
#  docs:
#    build:
#      context: .
#      dockerfile: Dockerfile-api-docs

# Start this container to use https for development. Set variables in proxy.env and change HOST in .env
  proxy:
    image: silintl/traefik-https-proxy:latest
    ports:
    - "80:80"
    - "443:443"
    env_file:
    - ./proxy.env
